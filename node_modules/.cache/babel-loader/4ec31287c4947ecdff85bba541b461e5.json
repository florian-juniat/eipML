{"ast":null,"code":"var _jsxFileName = \"/home/flo/EIP/eip_ml/SPRINT2/month2/eipML/src/App.js\";\nimport React, { useState } from 'react';\n\nconst App = () => {\n  const [info, setInfo] = useState({\n    \"ml\": \"LinearRegression\",\n    \"nb\": 1.0,\n    \"sizedb\": 1.0,\n    \"pourcentage\": 0.0\n  });\n  const [test, setTest] = useState(true);\n\n  if (test == true) {\n    setTest(false);\n    setInfo({\n      \"ml\": \"LinearRegression\",\n      \"nb\": 1.0,\n      \"sizedb\": 1.0,\n      \"pourcentage\": 0.0\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \" Sizedb: \", info.sizedb, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \" Type Machine Learning: \", info.ml, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \" Number: \", info.nb, \" / 7 \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \" Pourcentage avancement: \", info.pourcentage, \" % \"));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/flo/EIP/eip_ml/SPRINT2/month2/eipML/src/App.js"],"names":["React","useState","App","info","setInfo","test","setTest","sizedb","ml","nb","pourcentage"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC;AAAC,UAAM,kBAAP;AAA2B,UAAM,GAAjC;AAAsC,cAAU,GAAhD;AAAqD,mBAAe;AAApE,GAAD,CAAhC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;;AAEA,MAAII,IAAI,IAAI,IAAZ,EAAkB;AAChBC,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAF,IAAAA,OAAO,CAAC;AAAC,YAAM,kBAAP;AAA2B,YAAM,GAAjC;AAAsC,gBAAU,GAAhD;AAAqD,qBAAe;AAApE,KAAD,CAAP;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaD,IAAI,CAACI,MAAlB,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA4BJ,IAAI,CAACK,EAAjC,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaL,IAAI,CAACM,EAAlB,UAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA6BN,IAAI,CAACO,WAAlC,QAJF,CADF;AASD,CAnBD;;AAqBA,eAAeR,GAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst App = () => {\n\n  const [info, setInfo] = useState({\"ml\": \"LinearRegression\", \"nb\": 1.0, \"sizedb\": 1.0, \"pourcentage\": 0.0})\n  const [test, setTest] = useState(true)\n\n  if (test == true) {\n    setTest(false)\n    setInfo({\"ml\": \"LinearRegression\", \"nb\": 1.0, \"sizedb\": 1.0, \"pourcentage\": 0.0})\n  }\n \n  return (\n    <div>\n      <p> Sizedb: {info.sizedb} </p>\n      <p> Type Machine Learning: {info.ml} </p>\n      <p> Number: {info.nb} / 7 </p>\n      <p> Pourcentage avancement: {info.pourcentage} % </p>\n      \n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}